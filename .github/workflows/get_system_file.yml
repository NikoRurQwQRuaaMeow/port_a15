name: Get system file
on:
  workflow_dispatch:
    inputs:
      URL:
        description: "ÂæÖÊèêÂèñÊñá‰ª∂ÁöÑÁ≥ªÁªüÂåÖ‰∏ãËΩΩÂú∞ÂùÄ"
        required: true
      file_name:
        description: "ÂæÖÊèêÂèñÊñá‰ª∂ÂêçÁß∞"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: ÊúÄÂ§ßÂåñÊûÑÂª∫ÁéØÂ¢É
        uses: easimon/maximize-build-space@master
        with:
          swap-size-mb: 8192
          root-reserve-mb: 4096
          temp-reserve-mb: 4096
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
      - name: ÂÖãÈöÜ
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.SECRET_NAME }}
          repository: Meetingf/hyperOS_A15_port
      - name: -ÂáÜÂ§áÁéØÂ¢É
        run: |
          sudo timedatectl set-timezone Asia/Shanghai
          echo "URL=${{ github.event.inputs.URL }}" >> $GITHUB_ENV
          echo "file_name=${{ github.event.inputs.file_name }}" >> $GITHUB_ENV
          sudo apt install python3 python3-pip aria2 zip p7zip-full tar zstd dos2unix
          sudo apt --fix-broken install
          sudo apt update --fix-missing
          pip3 install --upgrade pip
          pip3 install pycryptodome
          pip3 install setuptools
          pip3 install docopt
          pip3 install requests
          pip3 install beautifulsoup4
          pip3 install --ignore-installed pyyaml
      - name: -Âà∂‰Ωúrom
        run: |
          aria2c -x16 -j$(nproc) -U "Mozilla/5.0" -d "$GITHUB_WORKSPACE" -o update.zip "${URL}"
          case "$(uname -m)" in
              "x86_64") tools=x86 ;;
              "aarch64"|"arm64") tools=arm64 ;;
              *) echo "Unknown architecture: $(uname -m)" ;;
          esac
          mkdir -p "$GITHUB_WORKSPACE"/img_port
          for i in system product system_ext mi_ext; do
            echo "Ê≠£Âú®ÊèêÂèñ$i"
            sudo "$GITHUB_WORKSPACE"/bin/${tools}/payload_extract -i "$GITHUB_WORKSPACE"/update.zip -t zip --extract=${i} -o "$GITHUB_WORKSPACE"/mods
            info=$(sudo python3 "$GITHUB_WORKSPACE"/bin/${tools}/gettype.py "$GITHUB_WORKSPACE"/mods/$i.img)
            echo "Ê≠£Âú®ÂàÜËß£$i($info)"
            if [ "$info" == "ext" ]; then
              sudo python3 "$GITHUB_WORKSPACE"/bin/${tools}/imgextractorLinux.py "$GITHUB_WORKSPACE"/mods/$i.img "$GITHUB_WORKSPACE"/img_port >/dev/null
            elif [ "$info" == "erofs" ]; then
              sudo "$GITHUB_WORKSPACE"/bin/${tools}/extract.erofs -i "$GITHUB_WORKSPACE"/mods/$i.img -o "$GITHUB_WORKSPACE"/img_port -x >/dev/null
            fi
            sudo rm -rf "$GITHUB_WORKSPACE"/mods/$i.img
          done
          mkdir -p "$GITHUB_WORKSPACE"/release
          tmpdir=$(mktemp -d)
          sudo find "$GITHUB_WORKSPACE"/img_port -type f -iname "*nfc*" -exec rsync -R {} "$tmpdir" \;
          sudo 7z a "$GITHUB_WORKSPACE"/release/files.7z "$tmpdir"/*
          sudo rm -rf "$tmpdir"
      - name: üì§ Post to Release (ÂèëÂ∏ÉÂà∞ Release)
        uses: softprops/action-gh-release@v1
        with:
          files: /home/runner/work/port_a15/port_a15/release/files.7z
          name: file_${{ github.event.inputs.file_name }}
          tag_name: file_${{ github.event.inputs.file_name }}
          body: |
            - **ÊèêÂèñÊñá‰ª∂:** ${{ github.event.inputs.file_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
